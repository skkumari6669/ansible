- name: create ec2 servers and r53 records
  hosts: local
  connection: local
  vars:
    subnet_id: "subnet-05948b07e44f52700"
    sg_id: "sg-0d0763baddbde89bd"
    ami_id: "ami-09c813fb71547fc4f"
    instances:
    - mysql
    - backend
    - frontend
    # zone: devops81s.online
  tasks:                        
  - name: create ec2 instances 
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      vpc_subnet_id: "{{ subnet_id }}"
      instance_type: "t2.micro"
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"

    loop: "{{ instances }}"
    register: ec2_instances
  #   # while running this task python will ask install required dependencies like pip3.9 install botocore bot3
  #   # credentials will ask create IAM name with ansible and down the csv file
  #   # In command line type aws configuration and give credentials and us-east-1

  # - name: print the output
  #   ansible.builtin.debug:
  #     msg: "{{ ec2_instances }}"
    
  # - name: create route53 private records
  #   amazon.aws.route53:
  #   state: present
  #   zone: "{{ zone }}"
  #   record: "{{ item.item }}.{{ zone }}"
  #   type: A
  #   ttl: 1
  #   value: "{{ item.instances[0].private_ip_address }}"
  #   wait: true    
  #   overwrite: true   
  # loop: "{{ ec2_instances.results }}"   

  # - name: create route53 public record for frontend
  #   amazon.aws.route53:
  #   state: present
  #   zone: "{{ zone }}"
  #   record: "{{ zone }}"
  #   type: A
  #   ttl: 1
  #   value: "{{ item.instances[0].public_ip_address }}"
  #   wait: true    
  #   overwrite: true    
  # loop: "{{ ec2_instances.results }}"   
  # when:  item.item == "frontend"


